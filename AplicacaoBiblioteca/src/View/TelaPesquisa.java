/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import controller.ClienteController;
import controller.LivroController;
import controller.PesquisaController;
import controller.UsuarioController;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import model.VO.ClienteVO;
import model.VO.LivroVO;
import model.VO.UsuarioVO;

/**
 *
 * @author Manoel
 */
public class TelaPesquisa extends javax.swing.JDialog {

    PesquisaController pesquisa = new PesquisaController();

    /**
     * Creates new form TelaPesquisa
     */
    public TelaPesquisa(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
    }

    private void tela() {
        jtTabela.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    //seta o nome da coluna da tabela
                    "Id", "Nome", "Cpf", "Rg", "Endere√ßo", "Telefone"
                }
        ) {
        });
        jtTabela.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        jtTabela.getColumnModel().getColumn(0).setPreferredWidth(2);
        jtTabela.getColumnModel().getColumn(1).setPreferredWidth(40);
        jtTabela.getColumnModel().getColumn(2).setPreferredWidth(30);
        jtTabela.getColumnModel().getColumn(3).setPreferredWidth(25);
        jtTabela.getColumnModel().getColumn(4).setPreferredWidth(50);
        jtTabela.getColumnModel().getColumn(5).setPreferredWidth(20);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jrClientes = new javax.swing.JRadioButton();
        jrLivros = new javax.swing.JRadioButton();
        jrUsuarios = new javax.swing.JRadioButton();
        btnPesquisa = new javax.swing.JButton();
        jbNova = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTabela = new javax.swing.JTable();
        jbExcluir = new javax.swing.JButton();
        jbEditar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        buttonGroup1.add(jrClientes);
        jrClientes.setFont(new java.awt.Font("PMingLiU-ExtB", 1, 14)); // NOI18N
        jrClientes.setSelected(true);
        jrClientes.setText("Clientes");

        buttonGroup1.add(jrLivros);
        jrLivros.setFont(new java.awt.Font("PMingLiU-ExtB", 1, 14)); // NOI18N
        jrLivros.setText("Livros");

        buttonGroup1.add(jrUsuarios);
        jrUsuarios.setFont(new java.awt.Font("PMingLiU-ExtB", 1, 14)); // NOI18N
        jrUsuarios.setText("Usuarios");

        btnPesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/335__loupe.png"))); // NOI18N
        btnPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaActionPerformed(evt);
            }
        });

        jbNova.setText("Nova Consulta");
        jbNova.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addComponent(jbNova)
                .addGap(86, 86, 86)
                .addComponent(jrClientes)
                .addGap(18, 18, 18)
                .addComponent(jrLivros)
                .addGap(18, 18, 18)
                .addComponent(jrUsuarios)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addComponent(btnPesquisa)
                .addGap(35, 35, 35))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jrClientes)
                        .addComponent(jrLivros)
                        .addComponent(jrUsuarios))
                    .addComponent(btnPesquisa))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbNova)
                .addGap(40, 40, 40))
        );

        jtTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtTabela);

        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Delete_Icon.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Editar.png"))); // NOI18N
        jbEditar.setText("Editar");
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbEditar)
                        .addGap(18, 18, 18)
                        .addComponent(jbExcluir)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbExcluir)
                    .addComponent(jbEditar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaActionPerformed
        // TODO add your handling code here:
        if (jrClientes.isSelected()) {
            jrLivros.setSelected(false);
            jrUsuarios.setSelected(false);

            telaCliente();

            ArrayList<ClienteVO> lista = (ArrayList<ClienteVO>) pesquisa.procurarCliente();

            DefaultTableModel model = (DefaultTableModel) jtTabela.getModel();
            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }

            for (int i = 0; i < lista.size(); i++) {
                int id = lista.get(i).getCodigo();
                String nome = (lista.get(i).getNome());
                String cpf = lista.get(i).getCpf();
                String rg = lista.get(i).getRg();
                String endereco = lista.get(i).getEndereco();
                String telefone = lista.get(i).getTelefone();

                model.addRow(new Object[]{id, nome, cpf, rg, endereco, telefone});

            }

        }

        if (jrUsuarios.isSelected()) {
            jrClientes.setSelected(false);
            jrLivros.setSelected(false);

            telaUsuario();

            ArrayList<UsuarioVO> lista = (ArrayList<UsuarioVO>) pesquisa.procuarUsuario();

            DefaultTableModel model = (DefaultTableModel) jtTabela.getModel();
            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }

            for (int i = 0; i < lista.size(); i++) {
                int id = lista.get(i).getCodigo();
                String nome = (lista.get(i).getNome());
                String cpf = lista.get(i).getCpf();
                String rg = lista.get(i).getRg();
                String endereco = lista.get(i).getEndereco();
                String telefone = lista.get(i).getTelefone();

                model.addRow(new Object[]{id, nome, cpf, rg, endereco, telefone});

            }
        }

        if (jrLivros.isSelected()) {
            jrClientes.setSelected(false);
            jrUsuarios.setSelected(false);

            telaLivro();

            ArrayList<LivroVO> lista = (ArrayList<LivroVO>) pesquisa.procurarLivro();

            DefaultTableModel model = (DefaultTableModel) jtTabela.getModel();
            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }

            for (int i = 0; i < lista.size(); i++) {
                int codigo = lista.get(i).getCodigo();
                String autor = (lista.get(i).getAutor());
                String titulo = lista.get(i).getTitulo();
                String editora = lista.get(i).getEditora();
                int isbn = lista.get(i).getIsbn();
                int numeroEdi√ß√£o = lista.get(i).getNumEdicao();
                String genero = lista.get(i).getGenero();

                model.addRow(new Object[]{codigo, autor, titulo, editora, isbn, numeroEdi√ß√£o, genero});

            }
        }
        jrLivros.setEnabled(false);
        jrUsuarios.setEnabled(false);
        jrClientes.setEnabled(false);
        btnPesquisa.setEnabled(false);
    }//GEN-LAST:event_btnPesquisaActionPerformed

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        // TODO add your handling code here:
        if ((jrClientes.isSelected() || jrLivros.isSelected() || jrUsuarios.isSelected()) && !btnPesquisa.isEnabled()) {
            if (jrClientes.isSelected()) {
                try {
                    int linha = jtTabela.getSelectedRow();

                    int id_editar = (int) jtTabela.getValueAt(linha, 0);

                    CadastroClienteGUI tela = new CadastroClienteGUI(null, rootPaneCheckingEnabled, id_editar);
                    tela.setLocationRelativeTo(this);
                    tela.setVisible(true);
                    telaCliente();

                    ArrayList<ClienteVO> lista = (ArrayList<ClienteVO>) pesquisa.procurarCliente();

                    DefaultTableModel model = (DefaultTableModel) jtTabela.getModel();
                    while (model.getRowCount() > 0) {
                        model.removeRow(0);
                    }

                    for (int i = 0; i < lista.size(); i++) {
                        int id = lista.get(i).getCodigo();
                        String nome = (lista.get(i).getNome());
                        String cpf = lista.get(i).getCpf();
                        String rg = lista.get(i).getRg();
                        String endereco = lista.get(i).getEndereco();
                        String telefone = lista.get(i).getTelefone();

                        model.addRow(new Object[]{id, nome, cpf, rg, endereco, telefone});

                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "selecione uma linha!! \n" + ex);
                }
            } else if (jrUsuarios.isSelected()) {
                try {
                    int linha = jtTabela.getSelectedRow();

                    int id_editar = (int) jtTabela.getValueAt(linha, 0);

                    CadastroUsuarioGUI tela = new CadastroUsuarioGUI(null, rootPaneCheckingEnabled, id_editar);
                    tela.setLocationRelativeTo(this);
                    tela.setVisible(true);
                    telaUsuario();

                    ArrayList<UsuarioVO> lista = (ArrayList<UsuarioVO>) pesquisa.procuarUsuario();

                    DefaultTableModel model = (DefaultTableModel) jtTabela.getModel();
                    while (model.getRowCount() > 0) {
                        model.removeRow(0);
                    }

                    for (int i = 0; i < lista.size(); i++) {
                        int id = lista.get(i).getCodigo();
                        String nome = (lista.get(i).getNome());
                        String cpf = lista.get(i).getCpf();
                        String rg = lista.get(i).getRg();
                        String endereco = lista.get(i).getEndereco();
                        String telefone = lista.get(i).getTelefone();

                        model.addRow(new Object[]{id, nome, cpf, rg, endereco, telefone});

                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "selecione uma linha!! \n" + ex);
                }
            } else if (jrLivros.isSelected()) {
                try {
                    int linha = jtTabela.getSelectedRow();

                    int id_editar = (int) jtTabela.getValueAt(linha, 0);

                    CadastroLivroGUI tela = new CadastroLivroGUI(null, rootPaneCheckingEnabled, id_editar);
                    tela.setLocationRelativeTo(this);
                    tela.setVisible(true);
                    telaLivro();

                    ArrayList<LivroVO> lista = (ArrayList<LivroVO>) pesquisa.procurarLivro();

                    DefaultTableModel model = (DefaultTableModel) jtTabela.getModel();
                    while (model.getRowCount() > 0) {
                        model.removeRow(0);
                    }

                    for (int i = 0; i < lista.size(); i++) {
                        int codigo = lista.get(i).getCodigo();
                        String autor = (lista.get(i).getAutor());
                        String titulo = lista.get(i).getTitulo();
                        String editora = lista.get(i).getEditora();
                        int isbn = lista.get(i).getIsbn();
                        int numeroEdi√ß√£o = lista.get(i).getNumEdicao();
                        String genero = lista.get(i).getGenero();

                        model.addRow(new Object[]{codigo, autor, titulo, editora, isbn, numeroEdi√ß√£o, genero});

                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "selecione uma linha!! \n" + ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Erro Critico de Sele√ß√£o efetue uma nova\n"
                    + "pesquisa para solucionar o problema");
        }
    }//GEN-LAST:event_jbEditarActionPerformed

    private void jbNovaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovaActionPerformed
        // TODO add your handling code here:
        jrLivros.setEnabled(true);
        jrUsuarios.setEnabled(true);
        jrClientes.setEnabled(true);
        btnPesquisa.setEnabled(true);
    }//GEN-LAST:event_jbNovaActionPerformed

    private void pesquisarCliente() {
        telaCliente();

        ArrayList<ClienteVO> lista = (ArrayList<ClienteVO>) pesquisa.procurarCliente();

        DefaultTableModel model = (DefaultTableModel) jtTabela.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }

        for (int i = 0; i < lista.size(); i++) {
            int id = lista.get(i).getCodigo();
            String nome = (lista.get(i).getNome());
            String cpf = lista.get(i).getCpf();
            String rg = lista.get(i).getRg();
            String endereco = lista.get(i).getEndereco();
            String telefone = lista.get(i).getTelefone();

            model.addRow(new Object[]{id, nome, cpf, rg, endereco, telefone});

        }
    }

    private void pesquisarUsuario() {
        telaUsuario();

        ArrayList<UsuarioVO> lista = (ArrayList<UsuarioVO>) pesquisa.procuarUsuario();

        DefaultTableModel model = (DefaultTableModel) jtTabela.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }

        for (int i = 0; i < lista.size(); i++) {
            int id = lista.get(i).getCodigo();
            String nome = (lista.get(i).getNome());
            String cpf = lista.get(i).getCpf();
            String rg = lista.get(i).getRg();
            String endereco = lista.get(i).getEndereco();
            String telefone = lista.get(i).getTelefone();

            model.addRow(new Object[]{id, nome, cpf, rg, endereco, telefone});

        }
    }

    private void pesquisarLivro() {
        telaLivro();

        ArrayList<LivroVO> lista = (ArrayList<LivroVO>) pesquisa.procurarLivro();

        DefaultTableModel model = (DefaultTableModel) jtTabela.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }

        for (int i = 0; i < lista.size(); i++) {
            int codigo = lista.get(i).getCodigo();
            String autor = (lista.get(i).getAutor());
            String titulo = lista.get(i).getTitulo();
            String editora = lista.get(i).getEditora();
            int isbn = lista.get(i).getIsbn();
            int numeroEdi√ß√£o = lista.get(i).getNumEdicao();
            String genero = lista.get(i).getGenero();

            model.addRow(new Object[]{codigo, autor, titulo, editora, isbn, numeroEdi√ß√£o, genero});

        }
    }

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        int linha = jtTabela.getSelectedRow();
        if (jrClientes.isSelected()) {
            if (linha >= 0) {
                int op = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir este cliente?", "Alerta", 0);

                if (op == 0) {

                    int id_Excluir = (int) jtTabela.getValueAt(linha, 0);

                    ClienteController cliente = new ClienteController();

                    try {
                        cliente.excluir(id_Excluir);
                    } catch (SQLException ex) {
                        Logger.getLogger(TelaPesquisa.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    pesquisarCliente();

                } else {
                    JOptionPane.showMessageDialog(null, "Selecione um Cliente para excluir");

                }

            }else{
                JOptionPane.showMessageDialog(null, "Selecione um Cliente para excluir");
            }
        } else if (jrLivros.isSelected()) {
            if (linha >= 0) {
                int op = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir este livro?", "Alerta", 0);

                if (op == 0) {

                    int id_Excluir = (int) jtTabela.getValueAt(linha, 0);
                    // System.out.println(id_Excluir);

                    LivroController livro = new LivroController();

                    livro.excluir(id_Excluir);

                    pesquisarLivro();

                } else {
                    JOptionPane.showMessageDialog(null, "Selecione um Livro para excluir");

                }
            }else{
                    JOptionPane.showMessageDialog(null, "Selecione um Livro para excluir");
            }
        } else if (jrUsuarios.isSelected()) {
            if (linha >= 0) {
                int op = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir este Usuario?", "Alerta", 0);

                if (op == 0) {

                    int id_Excluir = (int) jtTabela.getValueAt(linha, 0);
                    // System.out.println(id_Excluir);

                    UsuarioController usuario = new UsuarioController();

                    usuario.excluir(id_Excluir);

                    pesquisarUsuario();

                } else {
                    JOptionPane.showMessageDialog(null, "Selecione um Usuario para excluir");

                }
            } else {
                JOptionPane.showMessageDialog(null, "selecione um  usuario");
            }
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void telaCliente() {
        jtTabela.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Id", "Nome", "Cpf", "Rg", "Endere√ßo", "Telefone"
                }
        ) {
        });
        jtTabela.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        jtTabela.getColumnModel().getColumn(0).setPreferredWidth(2);
        jtTabela.getColumnModel().getColumn(1).setPreferredWidth(40);
        jtTabela.getColumnModel().getColumn(2).setPreferredWidth(30);
        jtTabela.getColumnModel().getColumn(3).setPreferredWidth(25);
        jtTabela.getColumnModel().getColumn(4).setPreferredWidth(50);
        jtTabela.getColumnModel().getColumn(5).setPreferredWidth(20);
    }

    private void telaUsuario() {
        jtTabela.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    //seta o nome da coluna da tabela
                    "Id", "Nome", "Cpf", "Rg", "Endere√ßo", "Telefone"
                }
        ) {
        });
        //define a sele√ß√£o somente para uma linha da tabela 
        jtTabela.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        //define a largura das colunas da tabelas
        jtTabela.getColumnModel().getColumn(0).setPreferredWidth(2);
        jtTabela.getColumnModel().getColumn(1).setPreferredWidth(40);
        jtTabela.getColumnModel().getColumn(2).setPreferredWidth(30);
        jtTabela.getColumnModel().getColumn(3).setPreferredWidth(25);
        jtTabela.getColumnModel().getColumn(4).setPreferredWidth(50);
        jtTabela.getColumnModel().getColumn(5).setPreferredWidth(20);
    }

    private void telaLivro() {
        jtTabela.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    //seta o nome da coluna da tabela
                    "Codigo", "Autor", "Titulo", "Editora", "Isbn", "Numero Edi√ß√£o", "genero"
                }
        ) {
        });
        //define a sele√ß√£o somente para uma linha da tabela 
        jtTabela.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        //define a largura das colunas da tabelas
        jtTabela.getColumnModel().getColumn(0).setPreferredWidth(2);
        jtTabela.getColumnModel().getColumn(1).setPreferredWidth(40);
        jtTabela.getColumnModel().getColumn(2).setPreferredWidth(30);
        jtTabela.getColumnModel().getColumn(3).setPreferredWidth(25);
        jtTabela.getColumnModel().getColumn(4).setPreferredWidth(50);
        jtTabela.getColumnModel().getColumn(5).setPreferredWidth(20);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPesquisa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPesquisa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPesquisa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPesquisa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaPesquisa dialog = new TelaPesquisa(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPesquisa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbNova;
    private javax.swing.JRadioButton jrClientes;
    private javax.swing.JRadioButton jrLivros;
    private javax.swing.JRadioButton jrUsuarios;
    private javax.swing.JTable jtTabela;
    // End of variables declaration//GEN-END:variables
}
